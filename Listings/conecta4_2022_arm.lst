


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             codigo, CODE
    2 00000000         ;IMPORT NUM_COLUMNAS
    3 00000000         ;IMPORT NUM_FILAS
    4 00000000                 EXPORT           conecta4_buscar_alineamiento_ar
m
    5 00000000                 EXPORT           conecta4_hay_linea_arm_c
    6 00000000                 EXPORT           conecta4_hay_linea_arm_arm
    7 00000000                 IMPORT           conecta4_buscar_alineamiento_c
    8 00000000                 PRESERVE8        {TRUE}
    9 00000000 00000007 
                       NUM_COLUMNAS
                               EQU              7
   10 00000000 00000006 
                       NUM_FILAS
                               EQU              6
   11 00000000                 ENTRY
   12 00000000         
   13 00000000         ;r0 <- cuadricula
   14 00000000         ;r1 <- fila
   15 00000000         ;r2 <- columna
   16 00000000         ;r3 <- color
   17 00000000         ;mem[sp] <- delta_fila
   18 00000000         ;mem[sp+4] <- delta_col
   19 00000000         conecta4_buscar_alineamiento_arm
   20 00000000 E92D4030        STMDB            sp!,{r4,r5,lr}
   21 00000004         
   22 00000004         ;Comportamiento equivalente del if:
   23 00000004         ; !C4_fila_valida(fila) ==
   24 00000004         ; !((fila >= 1) && (fila <= NUM_FILAS)) ==
   25 00000004         ; (fila < 1) || (fila > NUM_FILAS)
   26 00000004         
   27 00000004 E3510001        cmp              r1,#1       ; if (fila < 1) ret
                                                            urn 0;
   28 00000008 3A000016        blo              return0
   29 0000000C E3510006        cmp              r1,#NUM_FILAS ; if (fila > NUM_
                                                            FILAS) return 0;
   30 00000010 8A000014        bhi              return0
   31 00000014         
   32 00000014         ; !C4_columna_valida(columna) == !((columna >= 1) && (co
                       lumna <= NUM_COLUMNAS)) == (columna < 1) || (columna > N
                       UM_COLUMNAS)
   33 00000014 E3520001        cmp              r2,#1       ; if (columna < 1) 
                                                            return 0;
   34 00000018 3A000012        blo              return0
   35 0000001C E3520006        cmp              r2,#NUM_FILAS ; if (columna > N
                                                            UM_COLUMNAS) return
                                                             0;
   36 00000020 8A000010        bhi              return0
   37 00000024         
   38 00000024 E0804002        add              r4,r0,r2    ; r4 = r0 + r2
   39 00000028 E7D44181        ldrb             r4,[r4,r1,LSL#3] ; r4 = mem[r0+
                                                            r2+r1*8] = cuadricu
                                                            la[columna+fila*8]
   40 0000002C E3140004        tst              r4, #0x4    ; celda_vacia(cuadr
                                                            icula[fila][columna
                                                            ]) == 0
   41 00000030 0A00000C        beq              return0
   42 00000034         
   43 00000034 E2045003        and              r5, r4, #0x3 ; r5 = celda_color



ARM Macro Assembler    Page 2 


                                                            (cuadricula[fila][c
                                                            olumna])
   44 00000038 E1550003        cmp              r5,r3       ; if (r5 != color) 
                                                            return 0;
   45 0000003C 1A000009        bne              return0
   46 00000040         
   47 00000040 E59D400C        ldr              r4,[sp,#12] ; r4 <- delta_fila
   48 00000044 E59D5010        ldr              r5,[sp,#16] ; r5 <- delta_col
   49 00000048         
   50 00000048 E0811004        add              r1, r1, r4  ; r1 <- nueva_fila 
                                                            = fila + delta_fila
                                                            
   51 0000004C E0822005        add              r2, r2, r5  ; r2 <- nueva_colum
                                                            na = columna + delt
                                                            a_columna
   52 00000050         
   53 00000050         ;str r5,[sp,#-4]
   54 00000050         ;str r4,[sp,#-4]
   55 00000050 E92D0030        STMDB            sp!,{r4,r5} ; PUSH{delta_fila,d
                                                            elta_col} (cargar p
                                                            arametros)
   56 00000054 EBFFFFFE        bl               conecta4_buscar_alineamiento_ar
m
   57 00000058 E28DD008        add              sp, sp, #8  ; liberar parametro
                                                            s
   58 0000005C         
   59 0000005C E2800001        add              r0, r0, #1  ; r0 = 1 + conecta4
                                                            _buscar_alineamient
                                                            o_arm(..)
   60 00000060 E8BD4030        LDMIA            sp!,{r4,r5,lr}
   61 00000064 E12FFF1E        bx               lr
   62 00000068         
   63 00000068         return0
   64 00000068 E3A00000        mov              r0,#0
   65 0000006C E8BD4030        LDMIA            sp!,{r4,r5,lr}
   66 00000070 E12FFF1E        bx               lr
   67 00000074         
   68 00000074         ;r0 <- cuadricula
   69 00000074         ;r1 <- fila
   70 00000074         ;r2 <- columna
   71 00000074         ;r3 <- color
   72 00000074         conecta4_hay_linea_arm_c
   73 00000074         ; r4 delta_fila
   74 00000074         ; r5 delta_columna
   75 00000074 E92D4FF0        STMDB            sp!,{r4-r11,lr}
   76 00000078 E59F4208        LDR              r4, =0x01FFFF00 
                                                            ;  {0, -1, -1, 1}
   77 0000007C E3E05CFF        LDR              r5, =0xFFFF00FF 
                                                            ;  {-1, 0, -1, -1}
   78 00000080 E92D0030        STMDB            sp!,{r4,r5}
   79 00000084         
   80 00000084 E3A04000        mov              r4, #0      ; i = 0
   81 00000088 E3A05000        mov              r5, #0      ; linea = 0
   82 0000008C         
   83 0000008C E1A09000        mov              r9, r0      ; cuadricula save
   84 00000090 E1A0A001        mov              r10, r1     ; fila save
   85 00000094 E1A0B002        mov              r11, r2     ; columna save
   86 00000098         
   87 00000098         for



ARM Macro Assembler    Page 3 


   88 00000098 E1A06003        mov              r6, r3
   89 0000009C         
   90 0000009C E19D70D4        ldrsb            r7, [sp,r4]
   91 000000A0 E28DD004        add              sp, sp ,#4
   92 000000A4 E19D80D4        ldrsb            r8, [sp,r4]
   93 000000A8 E24DD004        sub              sp, sp ,#4
   94 000000AC E92D0180        STMDB            sp!,{r7,r8}
   95 000000B0 EBFFFFFE        bl               conecta4_buscar_alineamiento_c
   96 000000B4 E28DD008        add              sp, sp, #8
   97 000000B8         
   98 000000B8 E1A03006        mov              r3, r6
   99 000000BC         
  100 000000BC E1A06000        mov              r6,r0       ; long_linea = cone
                                                            cta4_buscar_alineam
                                                            iento_c(...)
  101 000000C0         
  102 000000C0         ;recover
  103 000000C0 E1A00009        mov              r0,r9
  104 000000C4         
  105 000000C4         ; if (linea) return TRUE //comportamiento equivalente
  106 000000C4 E3560004        cmp              r6, #4
  107 000000C8 23A00001        movhs            r0, #1
  108 000000CC 2A000014        bhs              returnTrueArmC
  109 000000D0         
  110 000000D0 E1A05003        mov              r5, r3
  111 000000D4         
  112 000000D4 E04A1007        sub              r1, r10, r7
  113 000000D8 E04B2008        sub              r2, r11, r8
  114 000000DC E2677000        rsb              r7, r7, #0
  115 000000E0 E2688000        rsb              r8, r8, #0
  116 000000E4 E92D0180        STMDB            sp!,{r7,r8}
  117 000000E8 EBFFFFFE        bl               conecta4_buscar_alineamiento_c
  118 000000EC E28DD008        add              sp, sp, #8
  119 000000F0         
  120 000000F0 E1A03005        mov              r3, r5
  121 000000F4         
  122 000000F4 E0866000        add              r6, r6, r0
  123 000000F8 E3560004        cmp              r6, #4
  124 000000FC 23A05001        movhs            r5, #1
  125 00000100 33A05000        movlo            r5, #0      ;????
  126 00000104         
  127 00000104         ;recover
  128 00000104 E1A00009        mov              r0,r9
  129 00000108 E1A0100A        mov              r1, r10
  130 0000010C E1A0200B        mov              r2, r11
  131 00000110         
  132 00000110 E2844001        add              r4, r4, #1
  133 00000114         ; (i < 4) && (linea == FALSE) -> (i != 4) && (linea != T
                       RUE)
  134 00000114 E3540004        cmp              r4, #4
  135 00000118 13550001        cmpne            r5, #1
  136 0000011C 1AFFFFDD        bne              for
  137 00000120         
  138 00000120 E1A00005        mov              r0, r5
  139 00000124         returnTrueArmC
  140 00000124 E28DD008        add              sp, sp, #8
  141 00000128 E8BD4FF0        LDMIA            sp!,{r4-r11,lr}
  142 0000012C E12FFF1E        bx               lr
  143 00000130         



ARM Macro Assembler    Page 4 


  144 00000130         ;r0 <- cuadricula
  145 00000130         ;r1 <- fila
  146 00000130         ;r2 <- columna
  147 00000130         ;r3 <- color
  148 00000130         conecta4_hay_linea_arm_arm
  149 00000130         ; r4 delta_fila
  150 00000130         ; r5 delta_columna
  151 00000130 E92D4FF0        STMDB            sp!,{r4-r11,lr}
  152 00000134 E59F414C        LDR              r4, =0x01FFFF00 
                                                            ;  {0, -1, -1, 1}
  153 00000138 E3E05CFF        LDR              r5, =0xFFFF00FF 
                                                            ;  {-1, 0, -1, -1}
  154 0000013C E92D0030        STMDB            sp!,{r4,r5}
  155 00000140         
  156 00000140 E3A06000        mov              r6, #0      ; i = 0
  157 00000144         
  158 00000144 E1A0A001        mov              r10, r1     ; fila save
  159 00000148 E1A0B002        mov              r11, r2     ; columna save
  160 0000014C         
  161 0000014C         ; if (!C4_fila_valida(fila) || ! C4_columna_valida(colum
                       na) ||
  162 0000014C         ;  celda_vacia(cuadricula[fila][columna]) || (celda_colo
                       r(cuadricula[fila][columna]) != color)) {
  163 0000014C         ;  return FALSE;
  164 0000014C         ; }
  165 0000014C         
  166 0000014C E3510001        cmp              r1,#1       ; if (fila < 1) ret
                                                            urn 0;
  167 00000150 3A000044        blo              returnFalseArmArm
  168 00000154 E3510006        cmp              r1,#NUM_FILAS ; if (fila > NUM_
                                                            FILAS) return 0;
  169 00000158 8A000042        bhi              returnFalseArmArm
  170 0000015C         
  171 0000015C         ; !C4_columna_valida(columna) == !((columna >= 1) && (co
                       lumna <= NUM_COLUMNAS)) == (columna < 1) || (columna > N
                       UM_COLUMNAS)
  172 0000015C E3520001        cmp              r2,#1       ; if (columna < 1) 
                                                            return 0;
  173 00000160 3A000040        blo              returnFalseArmArm
  174 00000164 E3520006        cmp              r2,#NUM_FILAS ; if (columna > N
                                                            UM_COLUMNAS) return
                                                             0;
  175 00000168 8A00003E        bhi              returnFalseArmArm
  176 0000016C         
  177 0000016C E0804002        add              r4,r0,r2    ; r4 = r0 + r2
  178 00000170 E7D44181        ldrb             r4,[r4,r1,LSL#3] ; r4 = mem[r0+
                                                            r2+r1*8] = cuadricu
                                                            la[columna+fila*8]
  179 00000174 E3140004        tst              r4, #0x4    ; celda_vacia(cuadr
                                                            icula[fila][columna
                                                            ]) == 0
  180 00000178 0A00003A        beq              returnFalseArmArm
  181 0000017C         
  182 0000017C E2045003        and              r5, r4, #0x3 ; r5 = celda_color
                                                            (cuadricula[fila][c
                                                            olumna])
  183 00000180 E1550003        cmp              r5,r3       ; if (r5 != color) 
                                                            return 0;
  184 00000184 1A000037        bne              returnFalseArmArm



ARM Macro Assembler    Page 5 


  185 00000188         
  186 00000188         forArmArm
  187 00000188 E3A07001        mov              r7, #1      ; long_linea = 1;
  188 0000018C         
  189 0000018C E19D80D6        ldrsb            r8, [sp, r6] ; r8 <- deltas_fil
                                                            a[i];
  190 00000190 E28DD004        add              sp, sp, #4
  191 00000194 E19D90D6        ldrsb            r9, [sp, r6] ; r9 <- deltas_col
                                                            umna[i];
  192 00000198 E24DD004        sub              sp, sp, #4
  193 0000019C         
  194 0000019C E0811008        add              r1, r1, r8  ; fila += deltas_fi
                                                            la[i]; 
  195 000001A0 E0822009        add              r2, r2, r9  ; columna += deltas
                                                            _columna[i];
  196 000001A4         
  197 000001A4         ; while (...) {
  198 000001A4         whileArmArm
  199 000001A4 E3510001        cmp              r1,#1       ; if (fila < 1) ret
                                                            urn 0;
  200 000001A8 3A000012        blo              outWhileArmArm
  201 000001AC E3510006        cmp              r1,#NUM_FILAS ; if (fila > NUM_
                                                            FILAS) return 0;
  202 000001B0 8A000010        bhi              outWhileArmArm
  203 000001B4         
  204 000001B4         ; !C4_columna_valida(columna) == !((columna >= 1) && (co
                       lumna <= NUM_COLUMNAS)) == (columna < 1) || (columna > N
                       UM_COLUMNAS)
  205 000001B4 E3520001        cmp              r2, #1      ; if (columna < 1) 
                                                            return 0;
  206 000001B8 3A00000E        blo              outWhileArmArm
  207 000001BC E3520006        cmp              r2, #NUM_FILAS ; if (columna > 
                                                            NUM_COLUMNAS) retur
                                                            n 0;
  208 000001C0 8A00000C        bhi              outWhileArmArm
  209 000001C4         
  210 000001C4 E0804002        add              r4, r0, r2  ; r4 = r0 + r2
  211 000001C8 E7D44181        ldrb             r4,[r4,r1,LSL#3] ; r4 = mem[r0+
                                                            r2+r1*8] = cuadricu
                                                            la[columna+fila*8]
  212 000001CC E3140004        tst              r4, #0x4    ; celda_vacia(cuadr
                                                            icula[fila][columna
                                                            ]) == 0
  213 000001D0 0A000008        beq              outWhileArmArm
  214 000001D4         
  215 000001D4 E2045003        and              r5, r4, #0x3 ; r5 = celda_color
                                                            (cuadricula[fila][c
                                                            olumna])
  216 000001D8 E1550003        cmp              r5,r3       ; if (r5 != color) 
                                                            return 0;
  217 000001DC 1A000005        bne              outWhileArmArm
  218 000001E0         
  219 000001E0 E0811008        add              r1, r1, r8  ; fila += deltas_fi
                                                            la[i]; 
  220 000001E4 E0822009        add              r2, r2, r9  ; columna += deltas
                                                            _columna[i];
  221 000001E8 E2877001        add              r7, r7, #1  ; long_linea++;
  222 000001EC         
  223 000001EC E3570004        cmp              r7, #4



ARM Macro Assembler    Page 6 


  224 000001F0 0A000020        beq              returnTrueArmArm
  225 000001F4         
  226 000001F4 EAFFFFEA        b                whileArmArm
  227 000001F8         outWhileArmArm
  228 000001F8         
  229 000001F8 E04A1008        sub              r1, r10, r8 ; fila = fila_aux -
                                                             deltas_fila[i];
  230 000001FC E04B2009        sub              r2, r11, r9 ; columna = columna
                                                            _aux - deltas_colum
                                                            na[i];
  231 00000200         
  232 00000200         ; while (...) {
  233 00000200         whileArmArm2
  234 00000200 E3510001        cmp              r1,#1       ; if (fila < 1) ret
                                                            urn 0;
  235 00000204 3A000012        blo              outWhileArmArm2
  236 00000208 E3510006        cmp              r1,#NUM_FILAS ; if (fila > NUM_
                                                            FILAS) return 0;
  237 0000020C 8A000010        bhi              outWhileArmArm2
  238 00000210         
  239 00000210         ; !C4_columna_valida(columna) == !((columna >= 1) && (co
                       lumna <= NUM_COLUMNAS)) == (columna < 1) || (columna > N
                       UM_COLUMNAS)
  240 00000210 E3520001        cmp              r2,#1       ; if (columna < 1) 
                                                            return 0;
  241 00000214 3A00000E        blo              outWhileArmArm2
  242 00000218 E3520006        cmp              r2,#NUM_FILAS ; if (columna > N
                                                            UM_COLUMNAS) return
                                                             0;
  243 0000021C 8A00000C        bhi              outWhileArmArm2
  244 00000220         
  245 00000220 E0804002        add              r4,r0,r2    ; r4 = r0 + r2
  246 00000224 E7D44181        ldrb             r4,[r4,r1,LSL#3] ; r4 = mem[r0+
                                                            r2+r1*8] = cuadricu
                                                            la[columna+fila*8]
  247 00000228 E3140004        tst              r4, #0x4    ; celda_vacia(cuadr
                                                            icula[fila][columna
                                                            ]) == 0
  248 0000022C 0A000008        beq              outWhileArmArm2
  249 00000230         
  250 00000230 E2045003        and              r5, r4, #0x3 ; r5 = celda_color
                                                            (cuadricula[fila][c
                                                            olumna])
  251 00000234 E1550003        cmp              r5,r3       ; if (r5 != color) 
                                                            return 0;
  252 00000238 1A000005        bne              outWhileArmArm2
  253 0000023C         
  254 0000023C E0411008        sub              r1, r1, r8  ; fila -= deltas_fi
                                                            la[i]; 
  255 00000240 E0422009        sub              r2, r2, r9  ; columna -= deltas
                                                            _columna[i];
  256 00000244 E2877001        add              r7, r7, #1  ; long_linea++;
  257 00000248         
  258 00000248 E3570004        cmp              r7, #4
  259 0000024C 0A000009        beq              returnTrueArmArm
  260 00000250         
  261 00000250 EAFFFFEA        b                whileArmArm2
  262 00000254         
  263 00000254         outWhileArmArm2



ARM Macro Assembler    Page 7 


  264 00000254 E1A0100A        mov              r1, r10     ; fila = fila_aux;
  265 00000258 E1A0200B        mov              r2, r11     ; columna = columna
                                                            _aux;
  266 0000025C         
  267 0000025C E2866001        add              r6, r6, #1  ; i++
  268 00000260         ; (i < 4) -> (i != 4)
  269 00000260 E3560004        cmp              r6, #4
  270 00000264 1AFFFFC7        bne              forArmArm
  271 00000268         
  272 00000268         returnFalseArmArm
  273 00000268 E3A00000        mov              r0, #0
  274 0000026C E28DD008        add              sp, sp, #8
  275 00000270 E8BD4FF0        LDMIA            sp!,{r4-r11,lr}
  276 00000274 E12FFF1E        bx               lr
  277 00000278         
  278 00000278         returnTrueArmArm
  279 00000278 E3A00001        mov              r0, #1
  280 0000027C E28DD008        add              sp, sp, #8
  281 00000280 E8BD4FF0        LDMIA            sp!,{r4-r11,lr}
  282 00000284 E12FFF1E        bx               lr
  283 00000288         
  284 00000288                 END
              01FFFF00 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\conecta4_2022_arm.d -o.\objects\conecta4_2022_arm.o -IC:\Keil_v5\ARM\RV3
1\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="
__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --list=.\listings\conec
ta4_2022_arm.lst conecta4_2022_arm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

codigo 00000000

Symbol: codigo
   Definitions
      At line 1 in file conecta4_2022_arm.s
   Uses
      None
Comment: codigo unused
conecta4_buscar_alineamiento_arm 00000000

Symbol: conecta4_buscar_alineamiento_arm
   Definitions
      At line 19 in file conecta4_2022_arm.s
   Uses
      At line 4 in file conecta4_2022_arm.s
      At line 56 in file conecta4_2022_arm.s

conecta4_hay_linea_arm_arm 00000130

Symbol: conecta4_hay_linea_arm_arm
   Definitions
      At line 148 in file conecta4_2022_arm.s
   Uses
      At line 6 in file conecta4_2022_arm.s
Comment: conecta4_hay_linea_arm_arm used once
conecta4_hay_linea_arm_c 00000074

Symbol: conecta4_hay_linea_arm_c
   Definitions
      At line 72 in file conecta4_2022_arm.s
   Uses
      At line 5 in file conecta4_2022_arm.s
Comment: conecta4_hay_linea_arm_c used once
for 00000098

Symbol: for
   Definitions
      At line 87 in file conecta4_2022_arm.s
   Uses
      At line 136 in file conecta4_2022_arm.s
Comment: for used once
forArmArm 00000188

Symbol: forArmArm
   Definitions
      At line 186 in file conecta4_2022_arm.s
   Uses
      At line 270 in file conecta4_2022_arm.s
Comment: forArmArm used once
outWhileArmArm 000001F8

Symbol: outWhileArmArm
   Definitions
      At line 227 in file conecta4_2022_arm.s
   Uses
      At line 200 in file conecta4_2022_arm.s
      At line 202 in file conecta4_2022_arm.s
      At line 206 in file conecta4_2022_arm.s
      At line 208 in file conecta4_2022_arm.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 213 in file conecta4_2022_arm.s
      At line 217 in file conecta4_2022_arm.s

outWhileArmArm2 00000254

Symbol: outWhileArmArm2
   Definitions
      At line 263 in file conecta4_2022_arm.s
   Uses
      At line 235 in file conecta4_2022_arm.s
      At line 237 in file conecta4_2022_arm.s
      At line 241 in file conecta4_2022_arm.s
      At line 243 in file conecta4_2022_arm.s
      At line 248 in file conecta4_2022_arm.s
      At line 252 in file conecta4_2022_arm.s

return0 00000068

Symbol: return0
   Definitions
      At line 63 in file conecta4_2022_arm.s
   Uses
      At line 28 in file conecta4_2022_arm.s
      At line 30 in file conecta4_2022_arm.s
      At line 34 in file conecta4_2022_arm.s
      At line 36 in file conecta4_2022_arm.s
      At line 41 in file conecta4_2022_arm.s
      At line 45 in file conecta4_2022_arm.s

returnFalseArmArm 00000268

Symbol: returnFalseArmArm
   Definitions
      At line 272 in file conecta4_2022_arm.s
   Uses
      At line 167 in file conecta4_2022_arm.s
      At line 169 in file conecta4_2022_arm.s
      At line 173 in file conecta4_2022_arm.s
      At line 175 in file conecta4_2022_arm.s
      At line 180 in file conecta4_2022_arm.s
      At line 184 in file conecta4_2022_arm.s

returnTrueArmArm 00000278

Symbol: returnTrueArmArm
   Definitions
      At line 278 in file conecta4_2022_arm.s
   Uses
      At line 224 in file conecta4_2022_arm.s
      At line 259 in file conecta4_2022_arm.s

returnTrueArmC 00000124

Symbol: returnTrueArmC
   Definitions
      At line 139 in file conecta4_2022_arm.s
   Uses
      At line 108 in file conecta4_2022_arm.s
Comment: returnTrueArmC used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

whileArmArm 000001A4

Symbol: whileArmArm
   Definitions
      At line 198 in file conecta4_2022_arm.s
   Uses
      At line 226 in file conecta4_2022_arm.s
Comment: whileArmArm used once
whileArmArm2 00000200

Symbol: whileArmArm2
   Definitions
      At line 233 in file conecta4_2022_arm.s
   Uses
      At line 261 in file conecta4_2022_arm.s
Comment: whileArmArm2 used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NUM_COLUMNAS 00000007

Symbol: NUM_COLUMNAS
   Definitions
      At line 9 in file conecta4_2022_arm.s
   Uses
      None
Comment: NUM_COLUMNAS unused
NUM_FILAS 00000006

Symbol: NUM_FILAS
   Definitions
      At line 10 in file conecta4_2022_arm.s
   Uses
      At line 29 in file conecta4_2022_arm.s
      At line 35 in file conecta4_2022_arm.s
      At line 168 in file conecta4_2022_arm.s
      At line 174 in file conecta4_2022_arm.s
      At line 201 in file conecta4_2022_arm.s
      At line 207 in file conecta4_2022_arm.s
      At line 236 in file conecta4_2022_arm.s
      At line 242 in file conecta4_2022_arm.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

conecta4_buscar_alineamiento_c 00000000

Symbol: conecta4_buscar_alineamiento_c
   Definitions
      At line 7 in file conecta4_2022_arm.s
   Uses
      At line 95 in file conecta4_2022_arm.s
      At line 117 in file conecta4_2022_arm.s

1 symbol
351 symbols in table
