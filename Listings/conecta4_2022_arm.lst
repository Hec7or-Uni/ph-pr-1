


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             codigo, CODE
    2 00000000         ;IMPORT NUM_COLUMNAS
    3 00000000         ;IMPORT NUM_FILAS
    4 00000000                 EXPORT           conecta4_buscar_alineamiento_ar
m
    5 00000000                 EXPORT           conecta4_hay_linea_arm_c
    6 00000000                 IMPORT           conecta4_buscar_alineamiento_c
    7 00000000                 PRESERVE8        {TRUE}
    8 00000000 00000007 
                       NUM_COLUMNAS
                               EQU              7
    9 00000000 00000006 
                       NUM_FILAS
                               EQU              6
   10 00000000                 ENTRY
   11 00000000         
   12 00000000         ;r0 <- cuadricula
   13 00000000         ;r1 <- fila
   14 00000000         ;r2 <- columna
   15 00000000         ;r3 <- color
   16 00000000         ;mem[sp] <- delta_fila
   17 00000000         ;mem[sp+4] <- delta_col
   18 00000000         conecta4_buscar_alineamiento_arm
   19 00000000 E92D4030        STMDB            sp!,{r4,r5,lr}
   20 00000004         
   21 00000004         ;Comportamiento equivalente del if:
   22 00000004         ; !C4_fila_valida(fila) ==
   23 00000004         ; !((fila >= 1) && (fila <= NUM_FILAS)) ==
   24 00000004         ; (fila < 1) || (fila > NUM_FILAS)
   25 00000004         
   26 00000004 E3510001        cmp              r1,#1       ; if (fila < 1) ret
                                                            urn 0;
   27 00000008 3A000016        blo              return0
   28 0000000C E3510006        cmp              r1,#NUM_FILAS ; if (fila > NUM_
                                                            FILAS) return 0;
   29 00000010 8A000014        bhi              return0
   30 00000014         
   31 00000014         ; !C4_columna_valida(columna) == !((columna >= 1) && (co
                       lumna <= NUM_COLUMNAS)) == (columna < 1) || (columna > N
                       UM_COLUMNAS)
   32 00000014 E3520001        cmp              r2,#1       ; if (columna < 1) 
                                                            return 0;
   33 00000018 3A000012        blo              return0
   34 0000001C E3520006        cmp              r2,#NUM_FILAS ; if (columna > N
                                                            UM_COLUMNAS) return
                                                             0;
   35 00000020 8A000010        bhi              return0
   36 00000024         
   37 00000024 E0804002        add              r4,r0,r2    ; r4 = r0 + r2
   38 00000028 E7D44181        ldrb             r4,[r4,r1,LSL#3] ; r4 = mem[r0+
                                                            r2+r1*8] = cuadricu
                                                            la[columna+fila*8]
   39 0000002C E3140004        tst              r4, #0x4    ; celda_vacia(cuadr
                                                            icula[fila][columna
                                                            ]) == 0
   40 00000030 0A00000C        beq              return0
   41 00000034         
   42 00000034 E2045003        and              r5, r4, #0x3 ; r5 = celda_color
                                                            (cuadricula[fila][c



ARM Macro Assembler    Page 2 


                                                            olumna])
   43 00000038 E1550003        cmp              r5,r3       ; if (r5 != color) 
                                                            return 0;
   44 0000003C 1A000009        bne              return0
   45 00000040         
   46 00000040 E59D400C        ldr              r4,[sp,#12] ; r4 <- delta_fila
   47 00000044 E59D5010        ldr              r5,[sp,#16] ; r5 <- delta_col
   48 00000048         
   49 00000048 E0811004        add              r1, r1, r4  ; r1 <- nueva_fila 
                                                            = fila + delta_fila
                                                            
   50 0000004C E0822005        add              r2, r2, r5  ; r2 <- nueva_colum
                                                            na = columna + delt
                                                            a_columna
   51 00000050         
   52 00000050         ;str r5,[sp,#-4]
   53 00000050         ;str r4,[sp,#-4]
   54 00000050 E92D0030        STMDB            sp!,{r4,r5} ; PUSH{delta_fila,d
                                                            elta_col} (cargar p
                                                            arametros)
   55 00000054 EBFFFFFE        bl               conecta4_buscar_alineamiento_ar
m
   56 00000058 E28DD008        add              sp, sp, #8  ; liberar parametro
                                                            s
   57 0000005C         
   58 0000005C E2800001        add              r0, r0, #1  ; r0 = 1 + conecta4
                                                            _buscar_alineamient
                                                            o_arm(..)
   59 00000060 E8BD4030        LDMIA            sp!,{r4,r5,lr}
   60 00000064 E12FFF1E        bx               lr
   61 00000068         
   62 00000068         return0
   63 00000068 E3A00000        mov              r0,#0
   64 0000006C E8BD4030        LDMIA            sp!,{r4,r5,lr}
   65 00000070 E12FFF1E        bx               lr
   66 00000074         
   67 00000074         ;r0 <- cuadricula
   68 00000074         ;r1 <- fila
   69 00000074         ;r2 <- columna
   70 00000074         ;r3 <- color
   71 00000074         conecta4_hay_linea_arm_c
   72 00000074         ; r4 delta_fila
   73 00000074         ; r5 delta_columna
   74 00000074 E92D4FF0        STMDB            sp!,{r4-r11,lr}
   75 00000078 E59F40B0        LDR              r4, =0x01FFFF00 
                                                            ;  {0, -1, -1, 1}
   76 0000007C E3E05CFF        LDR              r5, =0xFFFF00FF 
                                                            ;  {-1, 0, -1, -1}
   77 00000080 E92D0030        STMDB            sp!,{r4,r5}
   78 00000084         
   79 00000084 E3A04000        mov              r4, #0      ; i = 0
   80 00000088 E3A05000        mov              r5, #0      ; linea = 0
   81 0000008C         
   82 0000008C E1A09000        mov              r9, r0      ; cuadricula save
   83 00000090 E1A0A001        mov              r10, r1     ; fila save
   84 00000094 E1A0B002        mov              r11, r2     ; columna save
   85 00000098         
   86 00000098         for
   87 00000098 E1A06003        mov              r6, r3



ARM Macro Assembler    Page 3 


   88 0000009C         
   89 0000009C E19D70D4        ldrsb            r7, [sp,r4]
   90 000000A0 E28DD004        add              sp, sp ,#4
   91 000000A4 E19D80D4        ldrsb            r8, [sp,r4]
   92 000000A8 E24DD004        sub              sp, sp ,#4
   93 000000AC E92D0180        STMDB            sp!,{r7,r8}
   94 000000B0 EBFFFFFE        bl               conecta4_buscar_alineamiento_c
   95 000000B4 E28DD008        add              sp, sp, #8
   96 000000B8         
   97 000000B8 E1A03006        mov              r3, r6
   98 000000BC         
   99 000000BC E1A06000        mov              r6,r0       ; long_linea = cone
                                                            cta4_buscar_alineam
                                                            iento_c(...)
  100 000000C0         
  101 000000C0         ;recover
  102 000000C0 E1A00009        mov              r0,r9
  103 000000C4         
  104 000000C4         ; if (linea) return TRUE //comportamiento equivalente
  105 000000C4 E3560004        cmp              r6, #4
  106 000000C8 23A00001        movhs            r0, #1
  107 000000CC 2A000014        bhs              returnTrue
  108 000000D0         
  109 000000D0 E1A05003        mov              r5, r3
  110 000000D4         
  111 000000D4 E04A1007        sub              r1, r10, r7
  112 000000D8 E04B2008        sub              r2, r11, r8
  113 000000DC E2677000        rsb              r7, r7, #0
  114 000000E0 E2688000        rsb              r8, r8, #0
  115 000000E4 E92D0180        STMDB            sp!,{r7,r8}
  116 000000E8 EBFFFFFE        bl               conecta4_buscar_alineamiento_c
  117 000000EC E28DD008        add              sp, sp, #8
  118 000000F0         
  119 000000F0 E1A03005        mov              r3, r5
  120 000000F4         
  121 000000F4 E0866000        add              r6, r6, r0
  122 000000F8 E3560004        cmp              r6, #4
  123 000000FC 23A05001        movhs            r5, #1
  124 00000100 33A05000        movlo            r5, #0      ;????
  125 00000104         
  126 00000104         ;recover
  127 00000104 E1A00009        mov              r0,r9
  128 00000108 E1A0100A        mov              r1, r10
  129 0000010C E1A0200B        mov              r2, r11
  130 00000110         
  131 00000110 E2844001        add              r4, r4, #1
  132 00000114         ; (i < 4) && (linea == FALSE) -> (i != 4) && (linea != T
                       RUE)
  133 00000114 E3540004        cmp              r4, #4
  134 00000118 13550001        cmpne            r5, #1
  135 0000011C 1AFFFFDD        bne              for
  136 00000120         
  137 00000120 E1A00005        mov              r0, r5
  138 00000124         returnTrue
  139 00000124 E28DD008        add              sp, sp, #8
  140 00000128 E8BD4FF0        LDMIA            sp!,{r4-r11,lr}
  141 0000012C E12FFF1E        bx               lr
  142 00000130         
  143 00000130                 END



ARM Macro Assembler    Page 4 


              01FFFF00 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\conecta4_2022_arm.d -o.\objects\conecta4_2022_arm.o -IC:\Keil_v5\ARM\RV3
1\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="
__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --list=.\listings\conec
ta4_2022_arm.lst conecta4_2022_arm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

codigo 00000000

Symbol: codigo
   Definitions
      At line 1 in file conecta4_2022_arm.s
   Uses
      None
Comment: codigo unused
conecta4_buscar_alineamiento_arm 00000000

Symbol: conecta4_buscar_alineamiento_arm
   Definitions
      At line 18 in file conecta4_2022_arm.s
   Uses
      At line 4 in file conecta4_2022_arm.s
      At line 55 in file conecta4_2022_arm.s

conecta4_hay_linea_arm_c 00000074

Symbol: conecta4_hay_linea_arm_c
   Definitions
      At line 71 in file conecta4_2022_arm.s
   Uses
      At line 5 in file conecta4_2022_arm.s
Comment: conecta4_hay_linea_arm_c used once
for 00000098

Symbol: for
   Definitions
      At line 86 in file conecta4_2022_arm.s
   Uses
      At line 135 in file conecta4_2022_arm.s
Comment: for used once
return0 00000068

Symbol: return0
   Definitions
      At line 62 in file conecta4_2022_arm.s
   Uses
      At line 27 in file conecta4_2022_arm.s
      At line 29 in file conecta4_2022_arm.s
      At line 33 in file conecta4_2022_arm.s
      At line 35 in file conecta4_2022_arm.s
      At line 40 in file conecta4_2022_arm.s
      At line 44 in file conecta4_2022_arm.s

returnTrue 00000124

Symbol: returnTrue
   Definitions
      At line 138 in file conecta4_2022_arm.s
   Uses
      At line 107 in file conecta4_2022_arm.s
Comment: returnTrue used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NUM_COLUMNAS 00000007

Symbol: NUM_COLUMNAS
   Definitions
      At line 8 in file conecta4_2022_arm.s
   Uses
      None
Comment: NUM_COLUMNAS unused
NUM_FILAS 00000006

Symbol: NUM_FILAS
   Definitions
      At line 9 in file conecta4_2022_arm.s
   Uses
      At line 28 in file conecta4_2022_arm.s
      At line 34 in file conecta4_2022_arm.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

conecta4_buscar_alineamiento_c 00000000

Symbol: conecta4_buscar_alineamiento_c
   Definitions
      At line 6 in file conecta4_2022_arm.s
   Uses
      At line 94 in file conecta4_2022_arm.s
      At line 116 in file conecta4_2022_arm.s

1 symbol
343 symbols in table
